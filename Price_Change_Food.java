/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotellerio;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author Praveen Chandanala
 */
public class Price_Change_Food extends javax.swing.JFrame {

    /**
     * Creates new form Price_Change_Food
     */
    public Price_Change_Food() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon2.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        type = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        menu_view = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        food_id = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        new_price = new javax.swing.JTextField();
        id_err = new javax.swing.JLabel();
        new_err = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        pass_err = new javax.swing.JLabel();
        confirm = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Change Food Prices Here....");

        jLabel2.setText("Select Type");

        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Breakfast", "Lunch-Veg", "Lunch-NonVeg", "Snacks", "Dinner-Veg", "Dinner-NonVeg" }));
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });

        menu_view.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(menu_view);

        jLabel3.setText("Enter ID");

        food_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                food_idKeyTyped(evt);
            }
        });

        jLabel4.setText("New Price");

        new_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                new_priceKeyPressed(evt);
            }
        });

        jLabel7.setText("Your Password");

        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });

        confirm.setText("Confirm");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotellerio/images/money.png"))); // NOI18N

        jLabel10.setText("Just Decrease Or Increase...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(id_err, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(new_err, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(new_price, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pass_err, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(food_id, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(79, 79, 79)
                        .addComponent(confirm)))
                .addContainerGap(215, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel2)
                        .addGap(50, 50, 50)
                        .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(48, 48, 48)
                        .addComponent(jLabel4)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(food_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id_err, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(new_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(new_err, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pass_err, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirm)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
        id_err.setText("");
        pass_err.setText("");
        new_err.setText("");
        food_id.setText("");
        new_price.setText("");
        password.setText("");
        String type = String.valueOf(this.type.getSelectedItem());
        Connection con = DBConnect.connect();
        if(type.equals("Breakfast"))
        {
            try {
             String sql = "select * from breakfast_menu";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            menu_view.setModel(DbUtils.resultSetToTableModel(rs));
            } 
            catch (Exception e) {
                System.out.println(e);
            }
           
        }
        if(type.equals("Lunch-Veg") || type.equals("Dinner-Veg"))
        {
            try {
             String sql = "select * from lunch_menu";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            menu_view.setModel(DbUtils.resultSetToTableModel(rs));
            } 
            catch (Exception e) {
                System.out.println(e);
            }
        }
        if(type.equals("Lunch-NonVeg") || type.equals("Dinner-NonVeg"))
        {
            try {
             String sql = "select * from lunch_non_veg_menu";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            menu_view.setModel(DbUtils.resultSetToTableModel(rs));
            } 
            catch (Exception e) {
                System.out.println(e);
            }
        }
        if(type.equals("Snacks"))
        {
            try {
             String sql = "select * from snacks_menu";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            menu_view.setModel(DbUtils.resultSetToTableModel(rs));
            } 
            catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_typeActionPerformed

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        if(food_id.getText().trim().isEmpty() && new_price.getText().trim().isEmpty() && password.getText().trim().isEmpty())
        {
            id_err.setText("*This field is required");
            id_err.setForeground(Color.red);
            new_err.setText("*This field is required");
            new_err.setForeground(Color.red);
            pass_err.setText("*This field is required");
            pass_err.setForeground(Color.red);
        }
        else if(food_id.getText().trim().isEmpty())
        {
            id_err.setText("*This field is required");
            id_err.setForeground(Color.red);
            new_err.setText("");
            pass_err.setText("");
        }
        else if(new_price.getText().trim().isEmpty())
        {
            id_err.setText("");
            new_err.setText("*This field is required");
            new_err.setForeground(Color.red);
            pass_err.setText("");
        }
        else if(password.getText().trim().isEmpty())
        {
            id_err.setText("");
            new_err.setText("");
            pass_err.setText("*This field is required");
            pass_err.setForeground(Color.red);
        }
        else
        {
            try {
                int id = Integer.valueOf(food_id.getText());
                float mep = Float.valueOf(new_price.getText());
                String pass = String.valueOf(password.getPassword());
                String food_type = String.valueOf(type.getSelectedItem());
                Connection con = DBConnect.connect();
                String sql = "select username_01 from admin_auth where password_01 = ?";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, pass);
                ResultSet rs = ps.executeQuery();
                if(rs.next())
                {
                    System.out.println("hi");
                    if(food_type.equals("Breakfast"))
                    {
                        String sql1 = "update breakfast_menu set price  = ? where id = ?";
                        PreparedStatement ps1 = con.prepareStatement(sql1);
                        ps1.setFloat(1, mep);
                        ps1.setInt(2, id);
                        ps1.executeUpdate();
                        System.out.println("done bro");
                        //con.close();
                    }
                    else if(food_type.equals("Lunch-Veg") || food_type.equals("Dinner-Veg"))
                    {
                        String sql1 = "update lunch_menu set price  = ? where id1 = ?";
                        PreparedStatement ps1 = con.prepareStatement(sql1);
                        ps1.setFloat(1, mep);
                        ps1.setInt(2, id);
                        ps1.executeUpdate();
                        System.out.println("done bro");
                        //con.close();
                    }
                    else if(food_type.equals("Snacks"))
                    {
                        String sql1 = "update snacks_menu set price  = ? where id3 = ?";
                        PreparedStatement ps1 = con.prepareStatement(sql1);
                        ps1.setFloat(1, mep);
                        ps1.setInt(2, id);
                        ps1.executeUpdate();
                        System.out.println("done bro");
                        //con.close();
                    }
                    else if(food_type.equals("Lunch-NonVeg") || food_type.equals("Dinner-NonVeg"))
                    {
                        String sql1 = "update lunch_non_veg_menu set price  = ? where id2 = ?";
                        PreparedStatement ps1 = con.prepareStatement(sql1);
                        ps1.setFloat(1, mep);
                        ps1.setInt(2, id);
                        ps1.executeUpdate();
                        System.out.println("done bro");
                        //con.close();
                    }
                }
                else{
                    con.close();
                        System.out.println("not done bro");
                        }
                
                
            } 
            catch (Exception e) {
                System.out.println(e);
            }
        }
        
            
    }//GEN-LAST:event_confirmActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new  Admin_Section().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        food_id.setText("");
        new_price.setText("");
        password.setText("");
        id_err.setText("");
        new_err.setText("");
        pass_err.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void food_idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_food_idKeyTyped
         char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) ||(c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_food_idKeyTyped

    private void new_priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_new_priceKeyPressed
         int k = evt.getKeyCode();
         //(k>=KeyEvent.VK_NUMPAD0 && k<=KeyEvent.VK_NUMPAD9) ||(k>=KeyEvent.VK_0 && k<=KeyEvent.VK_9) || 
        if((k==evt.VK_PERIOD) || (k>=evt.VK_NUMPAD0 && k<=evt.VK_NUMPAD9) ||(k>=evt.VK_0 && k<=evt.VK_9) || (k>=KeyEvent.VK_BACK_SPACE) ||(k==KeyEvent.VK_DELETE))
        {
            new_price.setEditable(true);
        }
        else{
            new_price.setEditable(false);
            //evt.consume();
        }
    }//GEN-LAST:event_new_priceKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Price_Change_Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Price_Change_Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Price_Change_Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Price_Change_Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Price_Change_Food().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirm;
    private javax.swing.JTextField food_id;
    private javax.swing.JLabel id_err;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable menu_view;
    private javax.swing.JLabel new_err;
    private javax.swing.JTextField new_price;
    private javax.swing.JLabel pass_err;
    private javax.swing.JPasswordField password;
    private javax.swing.JComboBox<String> type;
    // End of variables declaration//GEN-END:variables
}
